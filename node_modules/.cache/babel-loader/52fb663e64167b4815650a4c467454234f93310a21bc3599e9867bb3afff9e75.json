{"ast":null,"code":"var _jsxFileName = \"D:\\\\Yandex\\\\step-2-sprint-1-step-2\\\\step-2-sprint-1-step-2\\\\src\\\\components\\\\BurgerContent\\\\BurgerIngredients\\\\BurgerIngredients.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport ingridient from \"./ingridient.module.css\";\nimport { IngredientsList } from \"./IngredientsList\";\nimport { IngredientModal } from \"./IngredientModal\";\nimport TabNavigation from \"./TabNavigation\";\nimport BurgerConstructor from \"../BurgerConstructor\";\n\n// Функция сортировки ингредиентов по типу\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst sortProducts = products => {\n  const order = [\"bun\", \"sauce\", \"main\"];\n  return products.slice().sort((a, b) => order.indexOf(a.type) - order.indexOf(b.type));\n};\nconst BurgerIngridients = () => {\n  _s();\n  const [current, setCurrent] = useState(\"bun\"); // Текущая выбранная вкладка\n  const [order, setOrder] = useState([]); // Состояние хранения заказа\n\n  // Локальное состояние для данных, загрузки и ошибок\n  const [state, setState] = useState({\n    isLoading: false,\n    hasError: false,\n    data: []\n  });\n\n  // Функция для получения ингредиентов с API\n  const getIngredients = () => {\n    setState(prev => ({\n      ...prev,\n      hasError: false,\n      isLoading: true\n    }));\n    fetch(\"https://norma.nomoreparties.space/api/ingredients\").then(res => res.json()).then(data =>\n    // Ожидается, что API возвращает объект вида { data: Product[] }\n    setState(prev => ({\n      ...prev,\n      data: data.data,\n      isLoading: false\n    }))).catch(e => {\n      setState(prev => ({\n        ...prev,\n        hasError: true,\n        isLoading: false\n      }));\n    });\n  };\n  useEffect(() => {\n    getIngredients();\n  }, []);\n\n  // Сортировка ингредиентов, полученных с API\n  const sortedProducts = sortProducts(state.data);\n\n  // Рефы для прокрутки к каждой категории\n  const bunRef = useRef(null);\n  const sauceRef = useRef(null);\n  const mainRef = useRef(null);\n\n  // Состояние для модального окна\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [isModalActive, setIsModalActive] = useState(false);\n\n  // Обработчик для переключения вкладок и прокрутки к нужной секции\n  const handleTabClick = value => {\n    var _bunRef$current, _sauceRef$current, _mainRef$current;\n    setCurrent(value);\n    switch (value) {\n      case \"bun\":\n        (_bunRef$current = bunRef.current) === null || _bunRef$current === void 0 ? void 0 : _bunRef$current.scrollIntoView({\n          behavior: \"smooth\"\n        });\n        break;\n      case \"sauce\":\n        (_sauceRef$current = sauceRef.current) === null || _sauceRef$current === void 0 ? void 0 : _sauceRef$current.scrollIntoView({\n          behavior: \"smooth\"\n        });\n        break;\n      case \"main\":\n        (_mainRef$current = mainRef.current) === null || _mainRef$current === void 0 ? void 0 : _mainRef$current.scrollIntoView({\n          behavior: \"smooth\"\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  const handleAddProduct = product => {\n    // Добавляем инредиент в конструктор заказа\n    setOrder(prevOrder => [...prevOrder, product]);\n    console.log(\"Добавлено в бургер\", product);\n  };\n  // Открытие модального окна по клику на ингредиент\n  const handleProductClick = product => {\n    setSelectedProduct(product);\n    setIsModalActive(true);\n  };\n\n  // Закрытие модального окна\n  const handleModalClose = () => {\n    setIsModalActive(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: `mt-9 mb-6 text text_type_main-large ${ingridient.ingridientTitle}`,\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabNavigation, {\n      current: current,\n      onTabClick: handleTabClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), state.isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 27\n    }, this), state.hasError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0435 \\u0438\\u043D\\u0433\\u0440\\u0435\\u0434\\u0438\\u0435\\u043D\\u0442\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(IngredientsList, {\n      sortedProducts: sortedProducts,\n      onProductClick: handleProductClick,\n      onAddProduct: handleAddProduct //Добавление ингредиента в конструктор\n      ,\n      bunRef: bunRef,\n      sauceRef: sauceRef,\n      mainRef: mainRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), selectedProduct && /*#__PURE__*/_jsxDEV(IngredientModal, {\n      product: selectedProduct,\n      isActive: isModalActive,\n      onClose: handleModalClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BurgerConstructor, {\n      order: order\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(BurgerIngridients, \"VlYTLT586ZuuOJlq0lJrAtzuYHg=\");\n_c = BurgerIngridients;\nexport default BurgerIngridients;\nvar _c;\n$RefreshReg$(_c, \"BurgerIngridients\");","map":{"version":3,"names":["React","useRef","useState","useEffect","ingridient","IngredientsList","IngredientModal","TabNavigation","BurgerConstructor","jsxDEV","_jsxDEV","Fragment","_Fragment","sortProducts","products","order","slice","sort","a","b","indexOf","type","BurgerIngridients","_s","current","setCurrent","setOrder","state","setState","isLoading","hasError","data","getIngredients","prev","fetch","then","res","json","catch","e","sortedProducts","bunRef","sauceRef","mainRef","selectedProduct","setSelectedProduct","isModalActive","setIsModalActive","handleTabClick","value","_bunRef$current","_sauceRef$current","_mainRef$current","scrollIntoView","behavior","handleAddProduct","product","prevOrder","console","log","handleProductClick","handleModalClose","children","className","ingridientTitle","fileName","_jsxFileName","lineNumber","columnNumber","onTabClick","onProductClick","onAddProduct","isActive","onClose","_c","$RefreshReg$"],"sources":["D:/Yandex/step-2-sprint-1-step-2/step-2-sprint-1-step-2/src/components/BurgerContent/BurgerIngredients/BurgerIngredients.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport ingridient from \"./ingridient.module.css\";\nimport { Product } from \"../../../types/productTypes\";\nimport { IngredientsList } from \"./IngredientsList\";\nimport { IngredientModal } from \"./IngredientModal\";\nimport TabNavigation from \"./TabNavigation\";\nimport BurgerConstructor from \"../BurgerConstructor\";\n\n// Функция сортировки ингредиентов по типу\nconst sortProducts = (products: Product[]): Product[] => {\n  const order = [\"bun\", \"sauce\", \"main\"];\n  return products\n    .slice()\n    .sort((a, b) => order.indexOf(a.type) - order.indexOf(b.type));\n};\n\nconst BurgerIngridients: React.FC = () => {\n  const [current, setCurrent] = useState(\"bun\"); // Текущая выбранная вкладка\n  const [order, setOrder] = useState<Product[]>([]); // Состояние хранения заказа\n\n  // Локальное состояние для данных, загрузки и ошибок\n  const [state, setState] = useState({\n    isLoading: false,\n    hasError: false,\n    data: [] as Product[],\n  });\n\n  // Функция для получения ингредиентов с API\n  const getIngredients = () => {\n    setState((prev) => ({ ...prev, hasError: false, isLoading: true }));\n    fetch(\"https://norma.nomoreparties.space/api/ingredients\")\n      .then((res) => res.json())\n      .then((data) =>\n        // Ожидается, что API возвращает объект вида { data: Product[] }\n        setState((prev) => ({\n          ...prev,\n          data: data.data as Product[],\n          isLoading: false,\n        }))\n      )\n      .catch((e) => {\n        setState((prev) => ({ ...prev, hasError: true, isLoading: false }));\n      });\n  };\n\n  useEffect(() => {\n    getIngredients();\n  }, []);\n\n  // Сортировка ингредиентов, полученных с API\n  const sortedProducts = sortProducts(state.data);\n\n  // Рефы для прокрутки к каждой категории\n  const bunRef = useRef<HTMLDivElement>(null);\n  const sauceRef = useRef<HTMLDivElement>(null);\n  const mainRef = useRef<HTMLDivElement>(null);\n\n  // Состояние для модального окна\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);\n  const [isModalActive, setIsModalActive] = useState(false);\n\n  // Обработчик для переключения вкладок и прокрутки к нужной секции\n  const handleTabClick = (value: string) => {\n    setCurrent(value);\n    switch (value) {\n      case \"bun\":\n        bunRef.current?.scrollIntoView({ behavior: \"smooth\" });\n        break;\n      case \"sauce\":\n        sauceRef.current?.scrollIntoView({ behavior: \"smooth\" });\n        break;\n      case \"main\":\n        mainRef.current?.scrollIntoView({ behavior: \"smooth\" });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleAddProduct = (product: Product) => {\n    // Добавляем инредиент в конструктор заказа\n    setOrder((prevOrder) => [...prevOrder, product]);\n    console.log(\"Добавлено в бургер\", product);\n  };\n  // Открытие модального окна по клику на ингредиент\n  const handleProductClick = (product: Product) => {\n    setSelectedProduct(product);\n    setIsModalActive(true);\n  };\n\n  // Закрытие модального окна\n  const handleModalClose = () => {\n    setIsModalActive(false);\n  };\n\n  return (\n    <>\n      <h1\n        className={`mt-9 mb-6 text text_type_main-large ${ingridient.ingridientTitle}`}\n      >\n        Список продуктов\n      </h1>\n      <TabNavigation current={current} onTabClick={handleTabClick} />\n\n      {state.isLoading && <p>Загрузка...</p>}\n      {state.hasError && <p>Произошла ошибка при загрузке ингредиентов</p>}\n\n      {/* Передаём отсортированные ингредиенты в компонент IngredientsList */}\n      <IngredientsList\n        sortedProducts={sortedProducts}\n        onProductClick={handleProductClick}\n        onAddProduct={handleAddProduct} //Добавление ингредиента в конструктор\n        bunRef={bunRef}\n        sauceRef={sauceRef}\n        mainRef={mainRef}\n      />\n\n      {selectedProduct && (\n        <IngredientModal\n          product={selectedProduct}\n          isActive={isModalActive}\n          onClose={handleModalClose}\n        />\n      )}\n\n      <BurgerConstructor order={order} />\n    </>\n  );\n};\n\nexport default BurgerIngridients;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,UAAU,MAAM,yBAAyB;AAEhD,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,eAAe,QAAQ,mBAAmB;AACnD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,iBAAiB,MAAM,sBAAsB;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,YAAY,GAAIC,QAAmB,IAAgB;EACvD,MAAMC,KAAK,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC;EACtC,OAAOD,QAAQ,CACZE,KAAK,CAAC,CAAC,CACPC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKJ,KAAK,CAACK,OAAO,CAACF,CAAC,CAACG,IAAI,CAAC,GAAGN,KAAK,CAACK,OAAO,CAACD,CAAC,CAACE,IAAI,CAAC,CAAC;AAClE,CAAC;AAED,MAAMC,iBAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACa,KAAK,EAAEW,QAAQ,CAAC,GAAGxB,QAAQ,CAAY,EAAE,CAAC,CAAC,CAAC;;EAEnD;EACA,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC;IACjC2B,SAAS,EAAE,KAAK;IAChBC,QAAQ,EAAE,KAAK;IACfC,IAAI,EAAE;EACR,CAAC,CAAC;;EAEF;EACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BJ,QAAQ,CAAEK,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAEH,QAAQ,EAAE,KAAK;MAAED,SAAS,EAAE;IAAK,CAAC,CAAC,CAAC;IACnEK,KAAK,CAAC,mDAAmD,CAAC,CACvDC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEJ,IAAI;IACT;IACAH,QAAQ,CAAEK,IAAI,KAAM;MAClB,GAAGA,IAAI;MACPF,IAAI,EAAEA,IAAI,CAACA,IAAiB;MAC5BF,SAAS,EAAE;IACb,CAAC,CAAC,CACJ,CAAC,CACAS,KAAK,CAAEC,CAAC,IAAK;MACZX,QAAQ,CAAEK,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAEH,QAAQ,EAAE,IAAI;QAAED,SAAS,EAAE;MAAM,CAAC,CAAC,CAAC;IACrE,CAAC,CAAC;EACN,CAAC;EAED1B,SAAS,CAAC,MAAM;IACd6B,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,cAAc,GAAG3B,YAAY,CAACc,KAAK,CAACI,IAAI,CAAC;;EAE/C;EACA,MAAMU,MAAM,GAAGxC,MAAM,CAAiB,IAAI,CAAC;EAC3C,MAAMyC,QAAQ,GAAGzC,MAAM,CAAiB,IAAI,CAAC;EAC7C,MAAM0C,OAAO,GAAG1C,MAAM,CAAiB,IAAI,CAAC;;EAE5C;EACA,MAAM,CAAC2C,eAAe,EAAEC,kBAAkB,CAAC,GAAG3C,QAAQ,CAAiB,IAAI,CAAC;EAC5E,MAAM,CAAC4C,aAAa,EAAEC,gBAAgB,CAAC,GAAG7C,QAAQ,CAAC,KAAK,CAAC;;EAEzD;EACA,MAAM8C,cAAc,GAAIC,KAAa,IAAK;IAAA,IAAAC,eAAA,EAAAC,iBAAA,EAAAC,gBAAA;IACxC3B,UAAU,CAACwB,KAAK,CAAC;IACjB,QAAQA,KAAK;MACX,KAAK,KAAK;QACR,CAAAC,eAAA,GAAAT,MAAM,CAACjB,OAAO,cAAA0B,eAAA,uBAAdA,eAAA,CAAgBG,cAAc,CAAC;UAAEC,QAAQ,EAAE;QAAS,CAAC,CAAC;QACtD;MACF,KAAK,OAAO;QACV,CAAAH,iBAAA,GAAAT,QAAQ,CAAClB,OAAO,cAAA2B,iBAAA,uBAAhBA,iBAAA,CAAkBE,cAAc,CAAC;UAAEC,QAAQ,EAAE;QAAS,CAAC,CAAC;QACxD;MACF,KAAK,MAAM;QACT,CAAAF,gBAAA,GAAAT,OAAO,CAACnB,OAAO,cAAA4B,gBAAA,uBAAfA,gBAAA,CAAiBC,cAAc,CAAC;UAAEC,QAAQ,EAAE;QAAS,CAAC,CAAC;QACvD;MACF;QACE;IACJ;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAIC,OAAgB,IAAK;IAC7C;IACA9B,QAAQ,CAAE+B,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,OAAO,CAAC,CAAC;IAChDE,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,OAAO,CAAC;EAC5C,CAAC;EACD;EACA,MAAMI,kBAAkB,GAAIJ,OAAgB,IAAK;IAC/CX,kBAAkB,CAACW,OAAO,CAAC;IAC3BT,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;;EAED;EACA,MAAMc,gBAAgB,GAAGA,CAAA,KAAM;IAC7Bd,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,oBACErC,OAAA,CAAAE,SAAA;IAAAkD,QAAA,gBACEpD,OAAA;MACEqD,SAAS,EAAE,uCAAuC3D,UAAU,CAAC4D,eAAe,EAAG;MAAAF,QAAA,EAChF;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACL1D,OAAA,CAACH,aAAa;MAACiB,OAAO,EAAEA,OAAQ;MAAC6C,UAAU,EAAErB;IAAe;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAE9DzC,KAAK,CAACE,SAAS,iBAAInB,OAAA;MAAAoD,QAAA,EAAG;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACrCzC,KAAK,CAACG,QAAQ,iBAAIpB,OAAA;MAAAoD,QAAA,EAAG;IAA0C;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAGpE1D,OAAA,CAACL,eAAe;MACdmC,cAAc,EAAEA,cAAe;MAC/B8B,cAAc,EAAEV,kBAAmB;MACnCW,YAAY,EAAEhB,gBAAiB,CAAC;MAAA;MAChCd,MAAM,EAAEA,MAAO;MACfC,QAAQ,EAAEA,QAAS;MACnBC,OAAO,EAAEA;IAAQ;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,EAEDxB,eAAe,iBACdlC,OAAA,CAACJ,eAAe;MACdkD,OAAO,EAAEZ,eAAgB;MACzB4B,QAAQ,EAAE1B,aAAc;MACxB2B,OAAO,EAAEZ;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CACF,eAED1D,OAAA,CAACF,iBAAiB;MAACO,KAAK,EAAEA;IAAM;MAAAkD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACnC,CAAC;AAEP,CAAC;AAAC7C,EAAA,CAhHID,iBAA2B;AAAAoD,EAAA,GAA3BpD,iBAA2B;AAkHjC,eAAeA,iBAAiB;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}