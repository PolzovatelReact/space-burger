{"ast":null,"code":"// src/features/auth/authSlice.ts\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  user: null,\n  accessToken: localStorage.getItem(\"accessToken\") || null,\n  refreshToken: localStorage.getItem(\"refreshToken\") || null,\n  loading: false,\n  error: null\n};\n\n// Асинхронный thunk для входа\nexport const login = createAsyncThunk(\"auth/login\", async ({\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch(\"https://norma.nomoreparties.space/api/auth/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (!response.ok) throw new Error(\"Ошибка входа\");\n    const data = await response.json();\n    localStorage.setItem(\"accessToken\", data.accessToken);\n    localStorage.setItem(\"refreshToken\", data.refreshToken);\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\n\n// 🔹 Асинхронный thunk для выхода\nexport const logout = createAsyncThunk(\"auth/logout\", async () => {\n  await fetch(\"https://norma.nomoreparties.space/api/auth/logout\", {\n    method: \"POST\"\n  });\n  localStorage.removeItem(\"accessToken\");\n  localStorage.removeItem(\"refreshToken\");\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  //Имя\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(login.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload.user;\n      state.accessToken = action.payload.accessToken;\n      state.refreshToken = action.payload.refreshToken;\n    }).addCase(login.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(logout.fulfilled, state => {\n      state.user = null;\n      state.accessToken = null;\n      state.refreshToken = null;\n    });\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","user","accessToken","localStorage","getItem","refreshToken","loading","error","login","email","password","rejectWithValue","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","setItem","message","logout","removeItem","authSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["D:/Yandex/step-2-sprint-1-step-2/step-2-sprint-1-step-2/src/store/slices/authSlice.ts"],"sourcesContent":["// src/features/auth/authSlice.ts\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\ninterface User {\r\n  email: string;\r\n  name: string;\r\n}\r\n\r\ninterface AuthState {\r\n  user: User | null;\r\n  accessToken: string | null;\r\n  refreshToken: string | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  user: null,\r\n  accessToken: localStorage.getItem(\"accessToken\") || null,\r\n  refreshToken: localStorage.getItem(\"refreshToken\") || null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\n// Асинхронный thunk для входа\r\nexport const login = createAsyncThunk(\r\n  \"auth/login\",\r\n  async (\r\n    { email, password }: { email: string; password: string },\r\n    { rejectWithValue }\r\n  ) => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://norma.nomoreparties.space/api/auth/login\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ email, password }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) throw new Error(\"Ошибка входа\");\r\n      const data = await response.json();\r\n\r\n      localStorage.setItem(\"accessToken\", data.accessToken);\r\n      localStorage.setItem(\"refreshToken\", data.refreshToken);\r\n\r\n      return data;\r\n    } catch (error: any) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\n// 🔹 Асинхронный thunk для выхода\r\nexport const logout = createAsyncThunk(\"auth/logout\", async () => {\r\n  await fetch(\"https://norma.nomoreparties.space/api/auth/logout\", {\r\n    method: \"POST\",\r\n  });\r\n  localStorage.removeItem(\"accessToken\");\r\n  localStorage.removeItem(\"refreshToken\");\r\n});\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\", //Имя\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(login.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.user = action.payload.user;\r\n        state.accessToken = action.payload.accessToken;\r\n        state.refreshToken = action.payload.refreshToken;\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload as string;\r\n      })\r\n      .addCase(logout.fulfilled, (state) => {\r\n        state.user = null;\r\n        state.accessToken = null;\r\n        state.refreshToken = null;\r\n      });\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}