{"ast":null,"code":"var _jsxFileName = \"D:\\\\Yandex\\\\step-2-sprint-1-step-2\\\\step-2-sprint-1-step-2\\\\src\\\\components\\\\Pages\\\\TestScript\\\\Fragment.tsx\";\nimport { Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst posts = [{\n  id: 1,\n  title: \"An update\",\n  body: \"It's been a while since I posted...\"\n}, {\n  id: 2,\n  title: \"My new blog\",\n  body: \"I am starting a new blog!\"\n}];\nfunction PostTitle({\n  title\n}) {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n}\n_c = PostTitle;\nfunction PostBody({\n  body\n}) {\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c2 = PostBody;\nconst Fragments = () => {\n  return posts.map(post => /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PostTitle, {\n      title: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostBody, {\n      body: post.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, post.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this));\n};\n_c3 = Fragments;\nexport default Fragments;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"PostTitle\");\n$RefreshReg$(_c2, \"PostBody\");\n$RefreshReg$(_c3, \"Fragments\");","map":{"version":3,"names":["Fragment","jsxDEV","_jsxDEV","posts","id","title","body","PostTitle","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","PostBody","_c2","Fragments","map","post","_c3","$RefreshReg$"],"sources":["D:/Yandex/step-2-sprint-1-step-2/step-2-sprint-1-step-2/src/components/Pages/TestScript/Fragment.tsx"],"sourcesContent":["import { Fragment } from \"react\";\r\n\r\ninterface PostsProp {\r\n  id: number;\r\n  title: string;\r\n  body: string;\r\n}\r\n\r\nconst posts = [\r\n  { id: 1, title: \"An update\", body: \"It's been a while since I posted...\" },\r\n  { id: 2, title: \"My new blog\", body: \"I am starting a new blog!\" },\r\n];\r\n\r\nfunction PostTitle({ title }: { title: string }) {\r\n  return <h1>{title}</h1>;\r\n}\r\n\r\nfunction PostBody({ body }: { body: string }) {\r\n  return (\r\n    <article>\r\n      <p>{body}</p>\r\n    </article>\r\n  );\r\n}\r\nconst Fragments: React.FC = () => {\r\n  return posts.map((post) => (\r\n    <Fragment key={post.id}>\r\n      <PostTitle title={post.title} />\r\n      <PostBody body={post.body} />\r\n    </Fragment>\r\n  ));\r\n};\r\nexport default Fragments;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQjC,MAAMC,KAAK,GAAG,CACZ;EAAEC,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,WAAW;EAAEC,IAAI,EAAE;AAAsC,CAAC,EAC1E;EAAEF,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,aAAa;EAAEC,IAAI,EAAE;AAA4B,CAAC,CACnE;AAED,SAASC,SAASA,CAAC;EAAEF;AAAyB,CAAC,EAAE;EAC/C,oBAAOH,OAAA;IAAAM,QAAA,EAAKH;EAAK;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACzB;AAACC,EAAA,GAFQN,SAAS;AAIlB,SAASO,QAAQA,CAAC;EAAER;AAAuB,CAAC,EAAE;EAC5C,oBACEJ,OAAA;IAAAM,QAAA,eACEN,OAAA;MAAAM,QAAA,EAAIF;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACG,GAAA,GANQD,QAAQ;AAOjB,MAAME,SAAmB,GAAGA,CAAA,KAAM;EAChC,OAAOb,KAAK,CAACc,GAAG,CAAEC,IAAI,iBACpBhB,OAAA,CAACF,QAAQ;IAAAQ,QAAA,gBACPN,OAAA,CAACK,SAAS;MAACF,KAAK,EAAEa,IAAI,CAACb;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCV,OAAA,CAACY,QAAQ;MAACR,IAAI,EAAEY,IAAI,CAACZ;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,GAFhBM,IAAI,CAACd,EAAE;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGZ,CACX,CAAC;AACJ,CAAC;AAACO,GAAA,GAPIH,SAAmB;AAQzB,eAAeA,SAAS;AAAC,IAAAH,EAAA,EAAAE,GAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}