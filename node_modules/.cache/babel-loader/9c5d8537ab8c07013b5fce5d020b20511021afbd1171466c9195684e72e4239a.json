{"ast":null,"code":"var _jsxFileName = \"D:\\\\Yandex\\\\step-2-sprint-1-step-2\\\\step-2-sprint-1-step-2\\\\src\\\\components\\\\Pages\\\\TestScript\\\\Fragment.tsx\";\nimport { Fragment } from \"react\"; // Позволяет группировать несколько элементов без добавления лишнего HTML\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst posts = [{\n  id: 1,\n  title: \"An update\",\n  body: \"It's been a while since I posted...\"\n}, {\n  id: 2,\n  title: \"My new blog\",\n  body: \"I am starting a new blog!\"\n}];\nfunction PostTitle({\n  title\n}) {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n}\n_c = PostTitle;\nfunction PostBody({\n  body\n}) {\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c2 = PostBody;\nconst Fragments = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PostTitle, {\n        title: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PostBody, {\n        body: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_c3 = Fragments;\nexport default Fragments;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"PostTitle\");\n$RefreshReg$(_c2, \"PostBody\");\n$RefreshReg$(_c3, \"Fragments\");","map":{"version":3,"names":["Fragment","jsxDEV","_jsxDEV","_Fragment","posts","id","title","body","PostTitle","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","PostBody","_c2","Fragments","map","post","_c3","$RefreshReg$"],"sources":["D:/Yandex/step-2-sprint-1-step-2/step-2-sprint-1-step-2/src/components/Pages/TestScript/Fragment.tsx"],"sourcesContent":["import { Fragment } from \"react\"; // Позволяет группировать несколько элементов без добавления лишнего HTML\r\n\r\nconst posts = [\r\n  { id: 1, title: \"An update\", body: \"It's been a while since I posted...\" },\r\n  { id: 2, title: \"My new blog\", body: \"I am starting a new blog!\" },\r\n];\r\n\r\nfunction PostTitle({ title }: { title: string }) {\r\n  return <h1>{title}</h1>;\r\n}\r\n\r\nfunction PostBody({ body }: { body: string }) {\r\n  return (\r\n    <article>\r\n      <p>{body}</p>\r\n    </article>\r\n  );\r\n}\r\nconst Fragments: React.FC = () => {\r\n  return (\r\n    <>\r\n      {posts.map((post) => (\r\n        <Fragment key={post.id}>\r\n          <PostTitle title={post.title} />\r\n          <PostBody body={post.body} />\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nexport default Fragments;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAF,QAAA,IAAAG,SAAA;AAElC,MAAMC,KAAK,GAAG,CACZ;EAAEC,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,WAAW;EAAEC,IAAI,EAAE;AAAsC,CAAC,EAC1E;EAAEF,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,aAAa;EAAEC,IAAI,EAAE;AAA4B,CAAC,CACnE;AAED,SAASC,SAASA,CAAC;EAAEF;AAAyB,CAAC,EAAE;EAC/C,oBAAOJ,OAAA;IAAAO,QAAA,EAAKH;EAAK;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACzB;AAACC,EAAA,GAFQN,SAAS;AAIlB,SAASO,QAAQA,CAAC;EAAER;AAAuB,CAAC,EAAE;EAC5C,oBACEL,OAAA;IAAAO,QAAA,eACEP,OAAA;MAAAO,QAAA,EAAIF;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACG,GAAA,GANQD,QAAQ;AAOjB,MAAME,SAAmB,GAAGA,CAAA,KAAM;EAChC,oBACEf,OAAA,CAAAC,SAAA;IAAAM,QAAA,EACGL,KAAK,CAACc,GAAG,CAAEC,IAAI,iBACdjB,OAAA,CAACF,QAAQ;MAAAS,QAAA,gBACPP,OAAA,CAACM,SAAS;QAACF,KAAK,EAAEa,IAAI,CAACb;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChCX,OAAA,CAACa,QAAQ;QAACR,IAAI,EAAEY,IAAI,CAACZ;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GAFhBM,IAAI,CAACd,EAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGZ,CACX;EAAC,gBACF,CAAC;AAEP,CAAC;AAACO,GAAA,GAXIH,SAAmB;AAYzB,eAAeA,SAAS;AAAC,IAAAH,EAAA,EAAAE,GAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}