{"ast":null,"code":"var _jsxFileName = \"D:\\\\Yandex\\\\step-2-sprint-1-step-2\\\\step-2-sprint-1-step-2\\\\src\\\\utils\\\\ProtectedRoute\\\\ProtectedRoute.tsx\";\nimport React from \"react\";\nimport { Outlet, Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoutes = ({\n  isAuthenticated\n}) => {\n  // ✅ Показываем `Outlet`, если аутентифицирован, иначе редиректим на логин\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 28\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 41\n  }, this);\n};\n_c = PrivateRoutes;\nexport default PrivateRoutes;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoutes\");","map":{"version":3,"names":["React","Outlet","Navigate","jsxDEV","_jsxDEV","PrivateRoutes","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["D:/Yandex/step-2-sprint-1-step-2/step-2-sprint-1-step-2/src/utils/ProtectedRoute/ProtectedRoute.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Outlet, Navigate } from \"react-router-dom\";\r\n\r\ninterface PrivateRoutesProps {\r\n  isAuthenticated: boolean;\r\n}\r\n\r\nconst PrivateRoutes: React.FC<PrivateRoutesProps> = ({ isAuthenticated }) => {\r\n  // ✅ Показываем `Outlet`, если аутентифицирован, иначе редиректим на логин\r\n  return isAuthenticated ? <Outlet /> : <Navigate to=\"/login\" replace />;\r\n};\r\n\r\nexport default PrivateRoutes;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMpD,MAAMC,aAA2C,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAC3E;EACA,OAAOA,eAAe,gBAAGF,OAAA,CAACH,MAAM;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGN,OAAA,CAACF,QAAQ;IAACS,EAAE,EAAC,QAAQ;IAACC,OAAO;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxE,CAAC;AAACG,EAAA,GAHIR,aAA2C;AAKjD,eAAeA,aAAa;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}