{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { BASE_URL } from \"../../utils/constants/constants\";\nconst initialState = {\n  user: null,\n  email: null,\n  isLoading: false,\n  hasError: false,\n  error: null\n};\n\n// **Регистрация пользователя**\nexport const registerUser = createAsyncThunk(\"user/register\", async ({\n  email,\n  password,\n  name\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const res = await fetch(`${BASE_URL}/auth/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password,\n        name\n      })\n    });\n    const data = await res.json();\n    if (!res.ok) {\n      return rejectWithValue(data.message || \"Ошибка регистрации\");\n    }\n\n    // Сохраняем токены в localStorage\n    localStorage.setItem(\"accessToken\", data.accessToken);\n    localStorage.setItem(\"refreshToken\", data.refreshToken);\n    return data;\n  } catch (error) {\n    return rejectWithValue(error instanceof Error ? error.message : \"Ошибка сети\");\n  }\n});\nconst registerSlice = createSlice({\n  name: \"register\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(registerUser.pending, state => {\n      state.isLoading = true;\n      state.hasError = false;\n      state.error = null;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload.user;\n      state.email = action.payload.user.email;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.hasError = true;\n      state.error = action.payload;\n    });\n  }\n});\nexport default registerSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","BASE_URL","initialState","user","email","isLoading","hasError","error","registerUser","password","name","rejectWithValue","res","fetch","method","headers","body","JSON","stringify","data","json","ok","message","localStorage","setItem","accessToken","refreshToken","Error","registerSlice","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["D:/Yandex/step-2-sprint-1-step-2/step-2-sprint-1-step-2/src/store/slices/registerSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport checkResponse from \"../../utils/checkResponse/checkResponse\";\r\nimport { BASE_URL } from \"../../utils/constants/constants\";\r\n\r\ninterface UserState {\r\n  user: {\r\n    email: string;\r\n    name: string;\r\n  } | null;\r\n  email: string | null;\r\n  isLoading: boolean;\r\n  hasError: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: UserState = {\r\n  user: null,\r\n  email: null,\r\n  isLoading: false,\r\n  hasError: false,\r\n  error: null,\r\n};\r\n\r\n// **Регистрация пользователя**\r\nexport const registerUser = createAsyncThunk(\r\n  \"user/register\",\r\n  async (\r\n    {\r\n      email,\r\n      password,\r\n      name,\r\n    }: { email: string; password: string; name: string },\r\n    { rejectWithValue }\r\n  ) => {\r\n    try {\r\n      const res = await fetch(`${BASE_URL}/auth/register`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email, password, name }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (!res.ok) {\r\n        return rejectWithValue(data.message || \"Ошибка регистрации\");\r\n      }\r\n\r\n      // Сохраняем токены в localStorage\r\n      localStorage.setItem(\"accessToken\", data.accessToken);\r\n      localStorage.setItem(\"refreshToken\", data.refreshToken);\r\n\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(\r\n        error instanceof Error ? error.message : \"Ошибка сети\"\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nconst registerSlice = createSlice({\r\n  name: \"register\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(registerUser.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.hasError = false;\r\n        state.error = null;\r\n      })\r\n      .addCase(registerUser.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.user = action.payload.user;\r\n        state.email = action.payload.user.email;\r\n      })\r\n      .addCase(registerUser.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.hasError = true;\r\n        state.error = action.payload as string;\r\n      });\r\n  },\r\n});\r\n\r\nexport default registerSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,SAASC,QAAQ,QAAQ,iCAAiC;AAa1D,MAAMC,YAAuB,GAAG;EAC9BC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE,KAAK;EAChBC,QAAQ,EAAE,KAAK;EACfC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAGR,gBAAgB,CAC1C,eAAe,EACf,OACE;EACEI,KAAK;EACLK,QAAQ;EACRC;AACiD,CAAC,EACpD;EAAEC;AAAgB,CAAC,KAChB;EACH,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGZ,QAAQ,gBAAgB,EAAE;MACnDa,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEd,KAAK;QAAEK,QAAQ;QAAEC;MAAK,CAAC;IAChD,CAAC,CAAC;IAEF,MAAMS,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;IAE7B,IAAI,CAACR,GAAG,CAACS,EAAE,EAAE;MACX,OAAOV,eAAe,CAACQ,IAAI,CAACG,OAAO,IAAI,oBAAoB,CAAC;IAC9D;;IAEA;IACAC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEL,IAAI,CAACM,WAAW,CAAC;IACrDF,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEL,IAAI,CAACO,YAAY,CAAC;IAEvD,OAAOP,IAAI;EACb,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACd,OAAOI,eAAe,CACpBJ,KAAK,YAAYoB,KAAK,GAAGpB,KAAK,CAACe,OAAO,GAAG,aAC3C,CAAC;EACH;AACF,CACF,CAAC;AAED,MAAMM,aAAa,GAAG7B,WAAW,CAAC;EAChCW,IAAI,EAAE,UAAU;EAChBR,YAAY;EACZ2B,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACxB,YAAY,CAACyB,OAAO,EAAGC,KAAK,IAAK;MACxCA,KAAK,CAAC7B,SAAS,GAAG,IAAI;MACtB6B,KAAK,CAAC5B,QAAQ,GAAG,KAAK;MACtB4B,KAAK,CAAC3B,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDyB,OAAO,CAACxB,YAAY,CAAC2B,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAAC7B,SAAS,GAAG,KAAK;MACvB6B,KAAK,CAAC/B,IAAI,GAAGiC,MAAM,CAACC,OAAO,CAAClC,IAAI;MAChC+B,KAAK,CAAC9B,KAAK,GAAGgC,MAAM,CAACC,OAAO,CAAClC,IAAI,CAACC,KAAK;IACzC,CAAC,CAAC,CACD4B,OAAO,CAACxB,YAAY,CAAC8B,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAAC7B,SAAS,GAAG,KAAK;MACvB6B,KAAK,CAAC5B,QAAQ,GAAG,IAAI;MACrB4B,KAAK,CAAC3B,KAAK,GAAG6B,MAAM,CAACC,OAAiB;IACxC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeT,aAAa,CAACW,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}