{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { BASE_URL } from \"../../utils/constants/constants\";\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  hasError: false,\n  error: null\n};\n\n// **Функция обновления токена**\nexport const refreshToken = async () => {\n  const refreshToken = localStorage.getItem(\"refreshToken\");\n  if (!refreshToken) return null;\n  try {\n    const response = await fetch(`${BASE_URL}/auth/token`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        token: refreshToken\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      localStorage.setItem(\"accessToken\", data.accessToken);\n      localStorage.setItem(\"refreshToken\", data.refreshToken);\n      return data.accessToken;\n    } else {\n      throw new Error(\"Ошибка обновления токена\");\n    }\n  } catch (error) {\n    console.error(\"Ошибка при обновлении токена:\", error);\n    return null;\n  }\n};\n\n// **Функция логина**\nexport const loginUser = createAsyncThunk(\"user/login\", async ({\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch(`${BASE_URL}/auth/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      // Сохраняем токены\n      localStorage.setItem(\"accessToken\", data.accessToken);\n      localStorage.setItem(\"refreshToken\", data.refreshToken);\n      return data;\n    } else {\n      return rejectWithValue(data.message || \"Ошибка авторизации\");\n    }\n  } catch (error) {\n    return rejectWithValue(\"Ошибка авторизации\");\n  }\n});\nconst userLogin = createSlice({\n  name: \"userLogin\",\n  initialState,\n  reducers: {\n    logoutUser: state => {\n      state.user = null;\n      state.isAuthenticated = false;\n      localStorage.removeItem(\"accessToken\");\n      localStorage.removeItem(\"refreshToken\");\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginUser.pending, state => {\n      state.isLoading = true;\n      state.hasError = false;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload.user;\n      state.isAuthenticated = true;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.hasError = true;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  logoutUser\n} = userLogin.actions;\nexport default userLogin.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","BASE_URL","initialState","user","isAuthenticated","isLoading","hasError","error","refreshToken","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","token","data","json","ok","setItem","accessToken","Error","console","loginUser","email","password","rejectWithValue","message","userLogin","name","reducers","logoutUser","state","removeItem","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["D:/Yandex/step-2-sprint-1-step-2/step-2-sprint-1-step-2/src/store/slices/loginSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { BASE_URL } from \"../../utils/constants/constants\";\r\n\r\ninterface LoginState {\r\n  user: { email: string; name: string } | null;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n  hasError: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: LoginState = {\r\n  user: null,\r\n  isAuthenticated: false,\r\n  isLoading: false,\r\n  hasError: false,\r\n  error: null,\r\n};\r\n\r\n// **Функция обновления токена**\r\nexport const refreshToken = async () => {\r\n  const refreshToken = localStorage.getItem(\"refreshToken\");\r\n  if (!refreshToken) return null;\r\n\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/auth/token`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ token: refreshToken }),\r\n    });\r\n\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      localStorage.setItem(\"accessToken\", data.accessToken);\r\n      localStorage.setItem(\"refreshToken\", data.refreshToken);\r\n      return data.accessToken;\r\n    } else {\r\n      throw new Error(\"Ошибка обновления токена\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Ошибка при обновлении токена:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// **Функция логина**\r\nexport const loginUser = createAsyncThunk(\r\n  \"user/login\",\r\n  async (\r\n    { email, password }: { email: string; password: string },\r\n    { rejectWithValue }\r\n  ) => {\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/auth/login`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        // Сохраняем токены\r\n        localStorage.setItem(\"accessToken\", data.accessToken);\r\n        localStorage.setItem(\"refreshToken\", data.refreshToken);\r\n        return data;\r\n      } else {\r\n        return rejectWithValue(data.message || \"Ошибка авторизации\");\r\n      }\r\n    } catch (error) {\r\n      return rejectWithValue(\"Ошибка авторизации\");\r\n    }\r\n  }\r\n);\r\n\r\nconst userLogin = createSlice({\r\n  name: \"userLogin\",\r\n  initialState,\r\n  reducers: {\r\n    logoutUser: (state) => {\r\n      state.user = null;\r\n      state.isAuthenticated = false;\r\n      localStorage.removeItem(\"accessToken\");\r\n      localStorage.removeItem(\"refreshToken\");\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loginUser.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.hasError = false;\r\n        state.error = null;\r\n      })\r\n      .addCase(loginUser.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.user = action.payload.user;\r\n        state.isAuthenticated = true;\r\n      })\r\n      .addCase(loginUser.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.hasError = true;\r\n        state.error = action.payload as string;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { logoutUser } = userLogin.actions;\r\nexport default userLogin.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}