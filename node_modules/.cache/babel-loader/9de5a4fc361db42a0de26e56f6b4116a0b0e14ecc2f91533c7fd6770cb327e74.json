{"ast":null,"code":"// src/features/auth/authSlice.ts\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  user: null,\n  accessToken: localStorage.getItem(\"accessToken\") || null,\n  refreshToken: localStorage.getItem(\"refreshToken\") || null,\n  loading: false,\n  error: null\n};\n\n// Асинхронный thunk для входа\nexport const login = createAsyncThunk(\"auth/login\", async ({\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch(\"https://norma.nomoreparties.space/api/auth/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (!response.ok) throw new Error(\"Ошибка входа\");\n    const data = await response.json();\n    localStorage.setItem(\"accessToken\", data.accessToken);\n    localStorage.setItem(\"refreshToken\", data.refreshToken);\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\n\n// 🔹 Асинхронный thunk для выхода\nexport const logout = createAsyncThunk(\"auth/logout\", async () => {\n  await fetch(\"https://norma.nomoreparties.space/api/auth/logout\", {\n    method: \"POST\"\n  });\n  localStorage.removeItem(\"accessToken\");\n  localStorage.removeItem(\"refreshToken\");\n});\n\n// **Функция проверки авторизации**\nexport const checkAuth = createAsyncThunk(\"user/checkAuth\", async () => {\n  const token = localStorage.getItem(\"accessToken\");\n  if (token) {\n    return {\n      isAuthenticated: true\n    };\n  }\n  return {\n    isAuthenticated: false\n  };\n});\n\n// 🔹 Загружаем пользователя из localStorage при запуске\nexport const loadUserFromStorage = createAsyncThunk(\"auth/loadUser\", async () => {\n  const user = localStorage.getItem(\"user\");\n  const accessToken = localStorage.getItem(\"accessToken\");\n  const refreshToken = localStorage.getItem(\"refreshToken\");\n  if (user && accessToken) {\n    return {\n      user: JSON.parse(user),\n      accessToken,\n      refreshToken\n    };\n  }\n  return {\n    user: null,\n    accessToken: null,\n    refreshToken: null\n  };\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  //Имя\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(login.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload.user;\n      state.accessToken = action.payload.accessToken;\n      state.refreshToken = action.payload.refreshToken;\n    }).addCase(login.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(logout.fulfilled, state => {\n      state.user = null;\n      state.accessToken = null;\n      state.refreshToken = null;\n    })\n    //Автологин\n    .addCase(loadUserFromStorage.fulfilled, (state, action) => {\n      state.user = action.payload.user;\n      state.accessToken = action.payload.accessToken;\n      state.refreshToken = action.payload.refreshToken;\n    });\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","user","accessToken","localStorage","getItem","refreshToken","loading","error","login","email","password","rejectWithValue","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","setItem","message","logout","removeItem","checkAuth","token","isAuthenticated","loadUserFromStorage","parse","authSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["D:/Yandex/step-2-sprint-1-step-2/step-2-sprint-1-step-2/src/store/slices/authSlice.ts"],"sourcesContent":["// src/features/auth/authSlice.ts\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\ninterface User {\r\n  email: string;\r\n  name: string;\r\n}\r\n\r\ninterface AuthState {\r\n  user: User | null;\r\n  accessToken: string | null;\r\n  refreshToken: string | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  user: null,\r\n  accessToken: localStorage.getItem(\"accessToken\") || null,\r\n  refreshToken: localStorage.getItem(\"refreshToken\") || null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\n// Асинхронный thunk для входа\r\nexport const login = createAsyncThunk(\r\n  \"auth/login\",\r\n  async (\r\n    { email, password }: { email: string; password: string },\r\n    { rejectWithValue }\r\n  ) => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://norma.nomoreparties.space/api/auth/login\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ email, password }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) throw new Error(\"Ошибка входа\");\r\n      const data = await response.json();\r\n\r\n      localStorage.setItem(\"accessToken\", data.accessToken);\r\n      localStorage.setItem(\"refreshToken\", data.refreshToken);\r\n\r\n      return data;\r\n    } catch (error: any) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\n// 🔹 Асинхронный thunk для выхода\r\nexport const logout = createAsyncThunk(\"auth/logout\", async () => {\r\n  await fetch(\"https://norma.nomoreparties.space/api/auth/logout\", {\r\n    method: \"POST\",\r\n  });\r\n  localStorage.removeItem(\"accessToken\");\r\n  localStorage.removeItem(\"refreshToken\");\r\n});\r\n\r\n// **Функция проверки авторизации**\r\nexport const checkAuth = createAsyncThunk(\"user/checkAuth\", async () => {\r\n  const token = localStorage.getItem(\"accessToken\");\r\n  if (token) {\r\n    return { isAuthenticated: true };\r\n  }\r\n  return { isAuthenticated: false };\r\n});\r\n\r\n// 🔹 Загружаем пользователя из localStorage при запуске\r\nexport const loadUserFromStorage = createAsyncThunk(\r\n  \"auth/loadUser\",\r\n  async () => {\r\n    const user = localStorage.getItem(\"user\");\r\n    const accessToken = localStorage.getItem(\"accessToken\");\r\n    const refreshToken = localStorage.getItem(\"refreshToken\");\r\n\r\n    if (user && accessToken) {\r\n      return { user: JSON.parse(user), accessToken, refreshToken };\r\n    }\r\n    return { user: null, accessToken: null, refreshToken: null };\r\n  }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\", //Имя\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(login.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.user = action.payload.user;\r\n        state.accessToken = action.payload.accessToken;\r\n        state.refreshToken = action.payload.refreshToken;\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload as string;\r\n      })\r\n      .addCase(logout.fulfilled, (state) => {\r\n        state.user = null;\r\n        state.accessToken = null;\r\n        state.refreshToken = null;\r\n      })\r\n      //Автологин\r\n      .addCase(loadUserFromStorage.fulfilled, (state, action) => {\r\n        state.user = action.payload.user;\r\n        state.accessToken = action.payload.accessToken;\r\n        state.refreshToken = action.payload.refreshToken;\r\n      });\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}